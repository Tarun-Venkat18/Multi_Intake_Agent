{"ast":null,"code":"var _jsxFileName = \"C:\\\\My Project\\\\Demo_Project\\\\src\\\\frontend\\\\src\\\\components\\\\IntakeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IntakeForm({\n  setResult,\n  setMemory\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [text, setText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const formData = new FormData();\n    if (file) formData.append('file', file);\n    if (text) formData.append('text', text);\n    try {\n      const res = await axios.post('http://localhost:8000/intake', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setResult(res.data);\n      // Fetch memory log after submission\n      const memRes = await axios.get('http://localhost:8000/memory');\n      setMemory(memRes.data);\n    } catch (err) {\n      setResult({\n        error: 'Submission failed'\n      });\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginBottom: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload PDF or JSON: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".pdf,.json,application/pdf,application/json\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Or paste email/text: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        rows: 4,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: loading,\n      style: {\n        marginTop: 12\n      },\n      children: loading ? 'Processing...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(IntakeForm, \"zfd8QsKN4zLmf5N0d4OL8YAzkIc=\");\n_c = IntakeForm;\nexport default IntakeForm;\nvar _c;\n$RefreshReg$(_c, \"IntakeForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","IntakeForm","setResult","setMemory","_s","file","setFile","text","setText","loading","setLoading","handleSubmit","e","preventDefault","formData","FormData","append","res","post","headers","data","memRes","get","err","error","onSubmit","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","target","files","marginTop","value","rows","width","disabled","_c","$RefreshReg$"],"sources":["C:/My Project/Demo_Project/src/frontend/src/components/IntakeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction IntakeForm({ setResult, setMemory }) {\r\n  const [file, setFile] = useState(null);\r\n  const [text, setText] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const formData = new FormData();\r\n    if (file) formData.append('file', file);\r\n    if (text) formData.append('text', text);\r\n    try {\r\n      const res = await axios.post('http://localhost:8000/intake', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n      });\r\n      setResult(res.data);\r\n      // Fetch memory log after submission\r\n      const memRes = await axios.get('http://localhost:8000/memory');\r\n      setMemory(memRes.data);\r\n    } catch (err) {\r\n      setResult({ error: 'Submission failed' });\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ marginBottom: 24 }}>\r\n      <div>\r\n        <label>Upload PDF or JSON: </label>\r\n        <input type=\"file\" accept=\".pdf,.json,application/pdf,application/json\" onChange={e => setFile(e.target.files[0])} />\r\n      </div>\r\n      <div style={{ marginTop: 12 }}>\r\n        <label>Or paste email/text: </label>\r\n        <textarea value={text} onChange={e => setText(e.target.value)} rows={4} style={{ width: '100%' }} />\r\n      </div>\r\n      <button type=\"submit\" disabled={loading} style={{ marginTop: 12 }}>\r\n        {loading ? 'Processing...' : 'Submit'}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default IntakeForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}